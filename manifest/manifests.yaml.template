---
apiVersion: v1
kind: Service
metadata:
  name: $name-postgres
  labels: &AppPostgresLabels
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: postgres
spec:
  ports:
  - port: 5432
  selector: *AppPostgresLabels
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: $name-postgres
  labels: &AppPostgresLabels
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels: *AppPostgresLabels
    spec:
      containers:
      - image: $imagePostgres
        name: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: $name-conjur-data-key
  labels:
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: service
type: Opaque
data:
  key: "$conjurDataKey"
---
apiVersion: v1
kind: Secret
metadata:
  name: $name-conjur-database-url
  labels:
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: service
type: Opaque
data:
  key: "$conjurDatabaseUrlEncoded"
---
apiVersion: v1
kind: Service
metadata:
  name: $name-conjur
  labels: &AppConjurLabels
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: service
spec:
  ports:
  - port: 80
    name: http
  selector: *AppConjurLabels
  type: LoadBalancer
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: $name-conjur
  labels: &AppConjurLabels
    app.kubernetes.io/name: $name
    app.kubernetes.io/component: service
spec:
  replicas: 1
  selector:
    matchLabels: *AppConjurLabels
  template:
    metadata:
      labels: *AppConjurLabels
    spec:
      containers:
      - name: conjur
        image: $imageConjur
        imagePullPolicy: Always
        args: ["server"]
        ports:
        - containerPort: 80
          name: http
        env:
        - name: CONJUR_DATA_KEY
          valueFrom:
            secretKeyRef:
              name: $name-conjur-data-key
              key: key
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: $name-conjur-database-url
              key: key
